{"version":3,"sources":["CommentList.js","CommentForm.js","App.js","index.js"],"names":["ListBody","props","rows","characterData","map","row","index","react_default","a","createElement","key","name","email","comment","ListHeader","CommentList","this","CommentList_ListBody","CommentList_ListHeader","Component","CommentForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","onFormSubmit","preventDefault","handleSubmit","state","initialState","_this$state","onSubmit","type","placeholder","onChange","class","App","characters","character","concat","toConsumableArray","className","src_CommentForm","src_CommentList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f6227758.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst ListBody = props => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.email}</td>\n        <td>{row.comment}</td>\n      </tr>\n    );\n  });\n\n  return <tbody>{rows}</tbody>;\n};\n\nconst ListHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Comments</th>\n      </tr>\n    </thead>\n  );\n};\n\nclass CommentList extends Component {\n  render() {\n    const { characterData } = this.props;\n\n    return (\n      <table>\n        <ListBody characterData={characterData} />\n        <ListHeader />\n      </table>\n    );\n  }\n}\n\nexport default CommentList;\n","import React, { Component } from 'react';\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n      name: '',\n      email: '',\n      comment: ''\n    };\n\n    this.state = this.initialState;\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    this.props.handleSubmit(this.state);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { name, email, comment } = this.state;\n\n    return (\n      <form onSubmit={this.onFormSubmit}>\n        <label>Name</label>\n        <input\n          type='text'\n          name='name'\n          value={name}\n          placeholder='Enter your name here'\n          onChange={this.handleChange}\n        />\n        <label>Email</label>\n        <input\n          type='email'\n          name='email'\n          value={email}\n          placeholder='Enter your email here..'\n          onChange={this.handleChange}\n        />\n\n        <label>Comment</label>\n\n        <div class='field'>\n          <textarea\n            rows='4'\n            name='comment'\n            value={comment}\n            placeholder='Type your comment here..'\n            onChange={this.handleChange}\n          ></textarea>\n        </div>\n\n        <button type='submit'>Submit My Comment</button>\n      </form>\n    );\n  }\n}\n\nexport default CommentForm;\n","import React, { Component } from 'react';\nimport CommentList from './CommentList';\nimport CommentForm from './CommentForm';\n\nclass App extends Component {\n  state = {\n    characters: []\n  };\n\n  handleSubmit = character => {\n    this.setState({ characters: [...this.state.characters, character] });\n  };\n\n  render() {\n    const { characters } = this.state;\n\n    return (\n      <div className='container'>\n        <h1>Commenting React Application</h1>\n        <p>Leave a comment about Harry Potter and the Chamber of Secret.</p>\n        <h3>Add a new comment</h3>\n        <CommentForm handleSubmit={this.handleSubmit} />\n        <CommentList characterData={characters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}